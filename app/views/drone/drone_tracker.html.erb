<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>



<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 400px;  /* The height is 400 pixels */
        width: 100%;  /* The width is the width of the web page */
    }

    body {
        padding-top: 100px;
    }
</style>


<body>

<nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
  <div class="container-fluid">
    <div class="navbar-header">
      <a class="navbar-brand" href="/">DroneTracker</a>
    </div>
    <ul class="nav navbar-nav">
      <div class="container">
        <div class="btn-group">
          <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Drone
          </button>
          <div class="dropdown-menu">
            <a class="dropdown-item" href="/drone/drone_list">Drone List</a>
            <a class="dropdown-item" href="/drone/drone_registration">Register a Drone</a>
          </div>
        </div>
        <a href="/missions" class="btn btn-primary" role="button">Mission List</a>
        <a href="/" class="btn btn-info" role="button">Home</a>
        <a href="https://validator.w3.org" class="btn btn-info" role="button">Validate this Site</a>
        <a href="/posts" class="btn btn-info" role="button">Forum</a>
        <% if user_signed_in? %>
          <% if current_user.admin %>
            <a href="/drone/users_lists" class="btn btn-info" role="button">User Management</a>
          <% end %>

          </div>
          </ul>
          <ul class="nav navbar-nav navbar-right">
            <div class="container">



              <li><p class="navbar-text">Signed in as <%= current_user.email %></p></li>
              <li><%= link_to "Sign out", destroy_user_session_path, method: :delete %></li>
        <% else %>
          <li><a href="/users/sign_up"><span class="glyphicon glyphicon-user"></span> Sign Up</a></li>
          <li><a href="/users/sign_in"><span class="glyphicon glyphicon-log-in"></span> Login</a></li>
        <% end %>

        </div>
        </ul>
        </div>
</nav>

<div class="container">

  <h3>Interactive Tracking System</h3>
</div>

<hr>

<!--The div element for the map -->
<div id="map"></div>
<script>
    var map;
    var navlog;
    var marker;

    function callNavLog() {
        var response = JSON.parse(
            $.ajax({type: "GET", url: "/drone/nav_logs_json?drone=<%= @drone.id %>", async: false}).responseText
        );

        console.log(response);

        return response;
    }

    // Initialize and add the map
    function initMap() {
        var response = callNavLog();
        navlog = {lat: response.gps_latitude, lng:response.gps_longitude};

        console.log(navlog);
        //
        // var locations = [];
        //
        // var i;
        // for (i = 0; i < navlogs.length; i++) {
        //     latlong = {lat: navlogs[i].gps_latitude, lng: navlogs[i].gps_longitude};
        //
        //     locations.push(latlong);
        // }

        // var last_element = 0;

        // var map_center = last_element;

        var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

        // The location of AIT
        var ait = {lat: 14.0785, lng: 100.6140};

        // If no last location center at AIT
        var map_center;
        var map_zoom;
        if (!navlog){
            map_center = ait;
            map_zoom = 16;
        } else {
            map_center = navlog;
            map_zoom = 17;
        }

        // The map, centered at last location
        map = new google.maps.Map(
            document.getElementById('map'), {zoom: map_zoom, center: map_center,
                styles: [
                    {elementType: 'geometry', stylers: [{color: '#242f3e'}]},
                    {elementType: 'labels.text.stroke', stylers: [{color: '#242f3e'}]},
                    {elementType: 'labels.text.fill', stylers: [{color: '#746855'}]},
                    {
                        featureType: 'administrative.locality',
                        elementType: 'labels.text.fill',
                        stylers: [{color: '#d59563'}]
                    },
                    {
                        featureType: 'poi',
                        elementType: 'labels.text.fill',
                        stylers: [{color: '#d59563'}]
                    },
                    {
                        featureType: 'poi.park',
                        elementType: 'geometry',
                        stylers: [{color: '#263c3f'}]
                    },
                    {
                        featureType: 'poi.park',
                        elementType: 'labels.text.fill',
                        stylers: [{color: '#6b9a76'}]
                    },
                    {
                        featureType: 'road',
                        elementType: 'geometry',
                        stylers: [{color: '#38414e'}]
                    },
                    {
                        featureType: 'road',
                        elementType: 'geometry.stroke',
                        stylers: [{color: '#212a37'}]
                    },
                    {
                        featureType: 'road',
                        elementType: 'labels.text.fill',
                        stylers: [{color: '#9ca5b3'}]
                    },
                    {
                        featureType: 'road.highway',
                        elementType: 'geometry',
                        stylers: [{color: '#746855'}]
                    },
                    {
                        featureType: 'road.highway',
                        elementType: 'geometry.stroke',
                        stylers: [{color: '#1f2835'}]
                    },
                    {
                        featureType: 'road.highway',
                        elementType: 'labels.text.fill',
                        stylers: [{color: '#f3d19c'}]
                    },
                    {
                        featureType: 'transit',
                        elementType: 'geometry',
                        stylers: [{color: '#2f3948'}]
                    },
                    {
                        featureType: 'transit.station',
                        elementType: 'labels.text.fill',
                        stylers: [{color: '#d59563'}]
                    },
                    {
                        featureType: 'water',
                        elementType: 'geometry',
                        stylers: [{color: '#17263c'}]
                    },
                    {
                        featureType: 'water',
                        elementType: 'labels.text.fill',
                        stylers: [{color: '#515c6d'}]
                    },
                    {
                        featureType: 'water',
                        elementType: 'labels.text.stroke',
                        stylers: [{color: '#17263c'}]
                    }
                ]});

        // var locations = [
        //     {lat: 14.081012, lng: 100.612743},
        //     {lat: 14.079269, lng: 100.609573},
        //     {lat: 14.076557, lng: 100.613988}
        // ];

        setMarker(map, navlog);

        // return [map, navlog];

        // var markers = locations.map(function(location, q) {
        //     var marker = new google.maps.Marker({
        //         position: navlog,
        //         // label: labels[q % last_element.length],
        //         map: map
        //     });
        //     return marker
        // });
    };

    function setMarker(map, navlog){
        console.log("Setting markers");
        marker = new google.maps.Marker({
            position: navlog,
            // label: labels[q % last_element.length],
            map: map,
            animation: google.maps.Animation.DROP,
        });
    }

    function reloadMarker() {
        console.log("Reloading markers");

        var response = callNavLog();
        navlog = {lat: response.gps_latitude, lng:response.gps_longitude};

        marker.setMap(null);

        setMarker(map, navlog);
    }

    setInterval(function(){
        while (true){
            reloadMarker().reload();
        }
    }, 5000);
</script>
<!--Load the API from the specified URL
* The async attribute allows the browser to render the page while the API loads
* The key parameter will contain your own API key (which is not needed for this tutorial)
* The callback parameter executes the initMap() function
-->
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDX3R98Z8sYA3M0xDyps10H0pMIIoSpCZY&callback=initMap">
</script>



<hr>

<div class="container">
  <h3>Drone Details <%= link_to 'Check Status', drone_check_status_path(drone: @drone.id), class: "btn btn-primary" %></h3>

</div>

<div class="container">
  <table class="table">
    <tr>
      <td><strong>Name</strong></td>
      <td><%= @drone.name %></td>
    </tr>

    <tr>
      <td><strong>Status</strong></td>
      <td><%= @drone.status %></td>
    </tr>

    <tr>
      <td><strong>Last Location</strong></td>
      <td><strong>LATITUDE: </strong> <%= @gps_latitude.blank? ? "Not Available" : @gps_latitude %> ,<strong>LONGITUDE:</strong>  <%= @gps_longitude.blank? ? "Not Available" : @gps_longitude %> </td>
    </tr>

    <tr>
      <td><strong>Alititude</strong></td>
      <td><%= @altitude.blank? ? "Not Available" : @altitude %> </td>
    </tr>

    <tr>
      <td><strong>Battery Voltage</strong></td>
      <td><%= @battery_voltage.blank? ? "Not Available" : @battery_voltage %> </td>
    </tr>

    <tr>
      <td><strong>Battery Level</strong></td>
      <td><%= @battery_level.blank? ? "Not Available" : @battery_level %> </td>
    </tr>

    <tr>
      <td><strong>Battery Current</strong></td>
      <td><%= @battery_current.blank? ? "Not Available" : @battery_current %> </td>
    </tr>

    <tr>
      <td><strong>EKF</strong></td>
      <td><%= @ekf_ok.blank? ? "Not Available" : @ekf_ok %> </td>
    </tr>

    <tr>
      <td><strong>Armable?</strong></td>
      <td><%= @is_armable.blank? ? "Not Available" : @is_armable %> </td>
    </tr>

    <tr>
      <td><strong>System Status</strong></td>
      <td><%= @system_status.blank? ? "Not Available" : @system_status %> </td>
    </tr>

    <tr>
      <td><strong>Mode</strong></td>
      <td><%= @mode.blank? ? "Not Available" : @mode %> </td>
    </tr>

    <tr>
      <td><strong>Armed</strong></td>
      <td><%= @armed.blank? ? "Not Available" : @armed %> </td>
    </tr>
  </table>
</div>
</body>
</html>